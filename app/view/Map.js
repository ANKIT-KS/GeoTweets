/*
 * File: app/view/Map.js
 *
 * This file was generated by Sencha Architect version 2.0.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('GeoTweet.view.Map', {
    extend: 'Ext.Map',
    alias: 'widget.map',

    config: {
        listeners: [
            {
                fn: 'onMapMaprender',
                event: 'maprender'
            }
        ]
    },

    onMapMaprender: function(map, gmap, options) {

        var store = Ext.getStore('Tweets');
        var count = store.getCount();
        //debugger;

        store.load({
            scope: this,
            callback: function(records) {
                //debugger;
                this.processTweets(records);
            }
        });

        /*
        var neighborhoods = [
        new google.maps.LatLng(52.511467, 13.447179),
        new google.maps.LatLng(52.549061, 13.422975),
        new google.maps.LatLng(52.497622, 13.396110),
        new google.maps.LatLng(52.517683, 13.394393)
        ];


        for (var i = 0; i < neighborhoods.length; i++) {
        var m = neighborhoods[i];

        new google.maps.Marker({
        position: m,
        map: gmap,
        draggable: false,
        animation: google.maps.Animation.DROP
        });
        }*/
    },

    processTweets: function(tweetlist) {
        console.log("hay "+tweetlist.length+" elementos");
        for (var i = 0, ln = tweetlist.length; i < ln; i++) {
            var tweet = tweetlist[i].data;
            if (tweet.geo && tweet.geo.coordinates) {
                this.addMarker(tweet);
                console.log("coordenadas? "+i);
            }
        }
    },

    addMarker: function(tweet) {

        var infoWindow = new google.maps.InfoWindow(),
        point = new google.maps.LatLng(
        tweet.geo.coordinates[0],
        tweet.geo.coordinates[1]
        ),
        marker = new google.maps.Marker({
            map: this.getMap(),
            position: point
        });

        google.maps.event.addListener(marker, "click", function() {
            infoWindow.setContent(tweet.text);
            infoWindow.open(this.getMap(), marker);
        });
    }

});